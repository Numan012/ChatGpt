{
  "openapi": "3.0.0",
  "info": {
    "title": "Combined API Documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/admin/createAdmin": {
      "post": {
        "tags": [
          "AccountSetting"
        ],
        "summary": "createAdmin",
        "description": "The createAdmin endpoint is a POST request that creates a new admin user. Below is a breakdown of all the components of this endpoint, including the request URL, headers, body, query parameters, and authentication.\nThe body of the request contains the details of the admin user to be created. It is sent in JSON format. The fields are:\nemail:\npassword:\nuserName:\nThe request includes three query parameters that provide additional context:\nlocationId:\nsessionId:\naccountId:\nThe createAdmin endpoint is used to create a new admin user by providing the required user information (email, password, and username) in the request body. It also includes optional context parameters (locationId, sessionId, and accountId) as query parameters. The endpoint requires a valid client identifier (Client-UUID) and a bearer token for authentication.\nDevelopers should ensure proper validation and error handling for each field to maintain security and data integrity.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "testingemail89899@gmail.com",
                  "password": "Admin123!",
                  "userName": "John Doe"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Client-UUID",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "ClientUUID"
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "locationId"
          },
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "sessionId"
          },
          {
            "name": "accountId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "accountId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Powered-By": {
                "schema": {
                  "type": "string",
                  "example": "Express"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "518"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"206-b3OQDEnGC+KJmh5o+pCyAkiEpDg\""
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Fri, 17 Jan 2025 13:11:36 GMT"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Keep-Alive": {
                "schema": {
                  "type": "string",
                  "example": "timeout=5"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "success": true,
                  "message": "Login successful",
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYjI3MjI4MDEtNjA5NS00YWRkLThlODMtZWQ2NDNjOTBhNGQzIiwicGhvbmVubyI6IisxMzEyMzQ3NTMxMyIsImlhdCI6MTczNzExOTQ5NiwiZXhwIjoxNzM3MjA1ODk2fQ.uc5t6lY3o8049Vr8nD8-FYDqo0djG8rXsa5iIoeRZE4",
                  "user": {
                    "_id": "b2722801-6095-4add-8e83-ed643c90a4d3",
                    "phoneno": "+13123475313",
                    "firstname": "test",
                    "lastname": "user",
                    "email": "testingemai755125@gmail.com",
                    "zipcode": "12345",
                    "dob": "1998-12-31T19:00:00.000Z",
                    "lang": "en"
                  },
                  "accessCode": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Powered-By": {
                "schema": {
                  "type": "string",
                  "example": "Express"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "49"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"31-VmptvJVCxgMiCaKMQdd9IkNBIdc\""
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Fri, 17 Jan 2025 13:15:21 GMT"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Keep-Alive": {
                "schema": {
                  "type": "string",
                  "example": "timeout=5"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "success": false,
                  "message": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "/admin/createAdmin/latest": {
      "post": {
        "tags": [
          "AccountSetting"
        ],
        "summary": "createAdmin",
        "description": "The createAdmin endpoint is a POST request that creates a new admin user. Below is a breakdown of all the components of this endpoint, including the request URL, headers, body, query parameters, and authentication.\nThe body of the request contains the details of the admin user to be created. It is sent in JSON format. The fields are:\nemail:\npassword:\nuserName:\nThe request includes three query parameters that provide additional context:\nlocationId:\nsessionId:\naccountId:\nThe createAdmin endpoint is used to create a new admin user by providing the required user information (email, password, and username) in the request body. It also includes optional context parameters (locationId, sessionId, and accountId) as query parameters. The endpoint requires a valid client identifier (Client-UUID) and a bearer token for authentication.\nDevelopers should ensure proper validation and error handling for each field to maintain security and data integrity.\nThe createAdmin endpoint is a POST request used to create a new admin user. Below is a detailed explanation of each component of this endpoint, including the URL, headers, body, query parameters, and authentication.\nThe request body is sent in JSON format and contains the information needed to create the admin user. The fields are:\nemail:\npassword:\nuserName:\nThe request includes additional context via query parameters:\nlocationId:\nsessionId:\naccountId:\nThe createAdmin endpoint is a secure API call that creates a new admin user. It requires the admin's email, password, and username in the request body. Query parameters provide additional context for the location, session, and account. The client must include a unique identifier (Client-UUID) in the headers and authenticate with a bearer token.\nDevelopers should validate the input fields to ensure data integrity and enforce security best practices, such as encrypting passwords and verifying the bearer token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "testingemail89899@gmail.com",
                  "password": "Admin123!",
                  "userName": "John Doe"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Client-UUID",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "ClientUUID"
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "locationId"
          },
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "sessionId"
          },
          {
            "name": "accountId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "accountId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Powered-By": {
                "schema": {
                  "type": "string",
                  "example": "Express"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "518"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"206-b3OQDEnGC+KJmh5o+pCyAkiEpDg\""
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Fri, 17 Jan 2025 13:11:36 GMT"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Keep-Alive": {
                "schema": {
                  "type": "string",
                  "example": "timeout=5"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "success": true,
                  "message": "Login successful",
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYjI3MjI4MDEtNjA5NS00YWRkLThlODMtZWQ2NDNjOTBhNGQzIiwicGhvbmVubyI6IisxMzEyMzQ3NTMxMyIsImlhdCI6MTczNzExOTQ5NiwiZXhwIjoxNzM3MjA1ODk2fQ.uc5t6lY3o8049Vr8nD8-FYDqo0djG8rXsa5iIoeRZE4",
                  "user": {
                    "_id": "b2722801-6095-4add-8e83-ed643c90a4d3",
                    "phoneno": "+13123475313",
                    "firstname": "test",
                    "lastname": "user",
                    "email": "testingemai755125@gmail.com",
                    "zipcode": "12345",
                    "dob": "1998-12-31T19:00:00.000Z",
                    "lang": "en"
                  },
                  "accessCode": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Powered-By": {
                "schema": {
                  "type": "string",
                  "example": "Express"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "49"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"31-VmptvJVCxgMiCaKMQdd9IkNBIdc\""
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Fri, 17 Jan 2025 13:15:21 GMT"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Keep-Alive": {
                "schema": {
                  "type": "string",
                  "example": "timeout=5"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "success": false,
                  "message": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}